server {
        listen   80; ## listen for ipv4
        listen   [::]:80; ## listen for ipv6
        server_name  codicill.us www.codicill.us;

	location /.well-known/acme-challenge/ {
	      alias /usr/local/www/nginx/.well-known/acme-challenge/;
	}

	location / {
		rewrite ^(.*) https://$server_name$1 permanent;
	}
}

server {
        listen   443 ssl; ## listen for ipv4
        listen   [::]:443 ssl; ## listen for ipv6
        server_name  codicill.us www.codicill.us;
	access_log /var/log/nginx/codicill.us-access.log;
	error_log /var/log/nginx/codicill.us-error.log warn;
	
        ssl_certificate  /var/lib/acme/live/codicill.us/fullchain;
        ssl_certificate_key  /var/lib/acme/live/codicill.us/privkey;

        ssl_protocols         TLSv1 TLSv1.2;
        ssl_ciphers           ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:HIGH:!RC4:!aNULL:!NULL:!MD5:!EDH:!kEDH:!DH:!ADH;
        ssl_prefer_server_ciphers on;
        ssl_session_cache     shared:SSL:1m;
        ssl_session_timeout   5m;
       # ssl_ecdh_curve        secp521r1;
        #add_header Strict-Transport-Security max-age=15768000; 
        ## use this only if all subdomains support HTTPS!
        #add_header Strict-Transport-Security "max-age=15768000; includeSubDomains";
       
	location / {
		alias /usr/jails/etherpad/home/etherpad/codicill.us_startpage/website/; 
	}


	location /pad {        
		rewrite                /pad/(.*) /$1 break;
		rewrite                ^/pad$ /pad/ permanent; 
		proxy_pass             http://10.23.42.2:9001/;
		proxy_pass_header Server;
		proxy_redirect         / /pad/;
		proxy_set_header       Host $host;
		proxy_buffering off;
	}

	location /pad/socket.io {
		rewrite /pad/socket.io/(.*) /socket.io/$1 break;
		proxy_pass http://10.23.42.2:9001/;
		proxy_redirect         / /pad/;
		proxy_set_header Host $host;
		proxy_buffering off;
		proxy_set_header X-Real-IP $remote_addr;  # http://wiki.nginx.org/HttpProxyModule
		proxy_set_header X-Forwarded-For $remote_addr; # EP logs to show the actual remote IP
		proxy_set_header Host $host;  # pass the host header                                                   
		proxy_http_version 1.1;  # recommended with keepalive connections                                                    
		# WebSocket proxying - from http://nginx.org/en/docs/http/websocket.html
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection $connection_upgrade;
	}

	location /static {
		rewrite /static/(.*) /static/$1 break;
		proxy_pass http://10.23.42.2:9001/;
		proxy_set_header Host $host;
		proxy_buffering off;
	}

}

map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}
